name: e2e
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read # for actions/checkout to fetch code

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup YQ
        uses: frenck/action-setup-yq@v1
        with:
          version: 4.14.2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Restore Go cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-ghcache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-ghcache-
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          image: kindest/node:v1.21.1@sha256:fae9a58f17f18f06aeac9772ca8b5ac680ebbed985e266f711d936e91d113bad
      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: Setup Kubectl
        uses: fluxcd/pkg/actions/kubectl@main
      - name: Check if working tree is dirty
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            git --no-pager diff
            echo 'run make test and commit changes'
            exit 1
          fi
      - name: Build the tf-controller container image
        run: |
          VERSION="e2e-${GITHUB_SHA::8}"

          make docker-buildx MANAGER_IMG=test/tf-controller RUNNER_IMG=test/tf-runner TAG=$VERSION \
            BUILD_ARGS="--cache-from=type=local,src=/tmp/.buildx-cache \
              --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
              --load"
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Load test images into KIND
        run: |
          VERSION="e2e-${GITHUB_SHA::8}"

          kind load docker-image test/tf-controller:$VERSION
          kind load docker-image test/tf-runner:$VERSION
      - name: Install CRDs
        run: make install
      - name: Deploy controllers
        run: |
          VERSION="e2e-${GITHUB_SHA::8}"

          # Patch env RUNNER_POD_IMAGE to be test/tf-runner:$VERSION
          yq -i e ".spec.template.spec.containers[0].env[1].value=\"test/tf-runner:$VERSION\"" config/manager/manager.yaml

          # Dev deploy
          make dev-deploy MANAGER_IMG=test/tf-controller RUNNER_IMG=test/tf-runner TAG=$VERSION
          kubectl -n tf-system rollout status deploy/source-controller --timeout=1m
          kubectl -n tf-system rollout status deploy/tf-controller --timeout=1m
      - name: Get terraform version
        run: |
          # Terraform binary will be moved from the TF-controller image to TF-runner, so we check TF's version there
          VERSION="e2e-${GITHUB_SHA::8}"
          docker run --rm --entrypoint=/usr/local/bin/terraform test/tf-runner:$VERSION version
      - name: Add git repository source
        run: |
          kubectl -n tf-system apply -f ./config/testdata/source
          kubectl -n tf-system wait gitrepository/helloworld --for=condition=ready --timeout=4m
      - name: Run approvePlan tests
        run: |
          kubectl -n tf-system apply -f ./config/testdata/approve-plan
          kubectl -n tf-system wait terraform/helloworld-auto-approve --for=condition=ready --timeout=4m
          kubectl -n tf-system wait terraform/helloworld-manual-approve --for=condition=plan=true --timeout=4m
      - name: Run drift detection tests
        run: |
          kubectl -n tf-system apply -f ./config/testdata/drift-detection
          kubectl -n tf-system wait terraform/helloworld-drift-detection --for=condition=ready=unknown --timeout=4m
          kubectl -n tf-system wait terraform/helloworld-drift-detection-disable --for=condition=ready --timeout=4m
      - name: Run healthchecks tests
        run: |
          kubectl -n tf-system apply -f ./config/testdata/healthchecks
          kubectl -n tf-system wait terraform/helloworld-healthchecks --for=condition=ready --timeout=4m
      - name: Run vars tests
        run: |
          kubectl -n tf-system apply -f ./config/testdata/vars
          kubectl -n tf-system wait terraform/helloworld-vars --for=condition=ready --timeout=4m
      - name: Run multi-tenancy test (Namespace dev)
        run: |
          kubectl apply -f ./config/testdata/multi-tenancy/namespace_and_serviceaccount.yaml
          kubectl apply -f ./config/testdata/multi-tenancy/role.yaml
          kubectl apply -f ./config/testdata/multi-tenancy/role_binding.yaml
          kubectl apply -f ./config/testdata/multi-tenancy/test.yaml
          kubectl -n dev wait terraform/helloworld-dev-mt --for=condition=ready --timeout=4m
      - name: Logs
        run: |
          kubectl -n tf-system logs deploy/source-controller
          kubectl -n tf-system logs deploy/tf-controller
      - name: Debug failure
        if: failure()
        run: |
          which kubectl
          kubectl version
          kustomize version
          kubectl -n tf-system get gitrepositories -oyaml
          kubectl -n tf-system get terraforms -oyaml
          kubectl -n tf-system get all
          kubectl -n tf-system logs deploy/source-controller
          kubectl -n tf-system logs deploy/tf-controller

          # multi-tenancy
          kubectl -n dev get gitrepositories -oyaml          
          kubectl -n dev get terraforms -oyaml
          kubectl -n dev get all
